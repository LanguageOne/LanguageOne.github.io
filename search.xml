<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[java-swing]]></title>
    <url>%2F2018%2F06%2F14%2Fjava-swing%2F</url>
    <content type="text"><![CDATA[图形界面设计Swing组件Swing容器的层次关系 顶层容器(JFrame，JApplet) 根窗格(自动创建，供Swing在后台使用，通常无法在这一层进行操作和处理) 分层窗格(加入分层窗格中的组件可以设置其图层层次，且不会被内容窗格中的对象屏蔽。在分层窗格中的对象可以设置其图层的层次高低，当图像重叠时，层次低的被屏蔽。这一层主要用于管理菜单栏和内层窗格。) 内容窗格(可见组件) 玻璃窗格(产生绘图效果，以及触发窗口程序的各种事件。) 框架类JFrameJFrame的许多方法是从它的父类Frame或Window类、Container类和Component类中继承来的。1234567891011121314151617package swing;import java.awt.*;import javax.swing.*;public class app1 &#123; static JFrame jfrm = new JFrame("这是个Swing程序"); public static void main(String[] args) &#123; JLabel lab = new JLabel("这是一个标签"); Image im = (new ImageIcon("1.jpg")).getImage(); jfrm.setIconImage(im); jfrm.setSize(260,140); jfrm.setBackground(Color.YELLOW); jfrm.setLocation(260, 150); jfrm.add(lab); jfrm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); jfrm.setVisible(true); &#125;&#125; 画板类JPanel画板是一种没有标题栏、没有边框的中间层容器，当然可以利用相应的方法为它添加边框。面板在Swing中用JPanel类实现。1234567891011121314151617181920212223242526package swing;import javax.swing.*;import javax.swing.border.TitledBorder;public class app2 &#123; public static void main(String[] args) &#123; JFrame jfrm = new JFrame("我的框架"); jfrm.setSize(210,180); jfrm.setLocation(500,200); JPanel jpan = new JPanel(); jpan.setSize(120,90); jpan.setLocation(40, 30); JButton bun = new JButton("点击我"); bun.setSize(80,20); bun.setLocation(20, 30); jfrm.setLayout(null); jpan.setLayout(null); jpan.add(bun); jpan.setBorder(new TitledBorder("面板区")); jfrm.add(jpan); jfrm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); jfrm.setVisible(true); &#125;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[swing]]></title>
    <url>%2F2018%2F06%2F09%2Fswing%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[java-raw-parameters]]></title>
    <url>%2F2018%2F06%2F08%2Fjava-raw-parameters%2F</url>
    <content type="text"><![CDATA[java泛型泛型的概念泛型的主要优点是能够在编译时而不是在运行时检测出错误泛型实际上是在定义类、接口或方法时通过为其增加“类型参数”实现。123[修饰类] class 类名&lt;T&gt;[public] interface 接口名&lt;T&gt;[public] [static] &lt;T&gt; 返回值类型 方法名 (T参数) 泛型方法1234567891011121314151617181920212223class GenMei&lt;T&gt;&#123; private T t; public T getObj()&#123; return t; &#125; public void setObj(T t)&#123; this.t = t; &#125; public &lt;U&gt; void display(U u)&#123; System.out.println("泛型类的类型参数T： "+ t.getClass().getName()); System.out.println("泛型类的类型参数U： "+ u.getClass().getName()); &#125;&#125;public class app_6 &#123; public static void main(String[] args)&#123; GenMei&lt;Integer&gt;gen = new GenMei&lt;Integer&gt;(); gen.setObj(new Integer(5)); System.out.println("第一次输出："); gen.display("我是文本"); System.out.println("第二次输出: "); gen.display(new Double(8.0)); &#125;&#125; 该程序的2~18行定义了具有类型参数T的泛型类，其中13~17行定义了具有类型参数U的泛型方法display()。 容器类容器类是java以类库的形式供用户开发程序时课直接使用的各种数据结构。 Java容器框架1.Collection（容器） 通常不能直接使用，但该接口提供了添加元素、删除元素、管理数据的方法。2.Set（集合） 不含重复元素的集合接口，它继承自Collection接口，并没有声明其他方法，它的方法都是从Collection接口继承的。 哈希集合HashSet 12345678910111213141516import java.util.*;public class hashset&#123; public static void main(String[] args)&#123; HashSet&lt;String&gt; hs = new HashSet&lt;String&gt;(); for(String a:args)&#123; if(!hs.add(a))&#123; System.out.println("元素"+a+"重复"); &#125; &#125; System.out.println("集合的容量为： "+ hs.size() + ",个元素为："); Iterator it = hs.iterator(); while(it.hasNext())&#123; System.out.print(it.next()+" "); &#125; &#125;&#125; 树集合TreeSet 123Set&lt;String&gt; hs = new HashSet&lt;String&gt;();····TreeSet&lt;String&gt; ts = new TreeSet&lt;String&gt;(hs); 映射接口Map 12345678910111213141516171819202122232425262728293031package fanlei;import java.util.*;public class map &#123; public static void main(String[] args)&#123; Map&lt;String,String&gt;hm = new HashMap&lt;String,String&gt;(); hm.put("006","唐僧"); hm.put("007","孙悟空"); hm.put("008","猪八戒"); hm.put("009","沙和尚"); hm.put("010","白龙马"); System.out.println("哈希映射中的内容如下：\n" + hm); String str = (String)hm.remove("010"); Set keys = hm.keySet(); Iterator it = keys.iterator(); System.out.println("HashMap类实现的Map映射，无序： "); while(it.hasNext())&#123; String xh = (String)it.next(); String name = (String)hm.get(xh); System.out.println(xh+ " " + name); &#125; TreeMap&lt;String,String&gt; tm = new TreeMap&lt;String,String&gt;(); tm.putAll(hm); Iterator iter = tm.keySet().iterator(); System.out.println("TreeMap类实现的Map映射,键值升序： "); while(iter.hasNext())&#123; String xh =(String)iter.next(); String name = (String)hm.get(xh); System.out.println(xh + " " + name); &#125; &#125;&#125; 3.List(列表) 它是一种包含有序元素的线性表。]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java_multi_thread]]></title>
    <url>%2F2018%2F06%2F08%2Fjava-multi-thread%2F</url>
    <content type="text"><![CDATA[多线程1.继承java.lang中的thread类2.在自己定义的类中实现Runnable接口 多线程的创建利用Thread类的子类来创建线程123456789101112131415161718192021222324class MyThread extends Thread&#123; private String who; public MyThread(String str)&#123; who = str; &#125; public void run()&#123; for(int i=0;i&lt;5;i++)&#123; try &#123; sleep((int) (1000*Math.random())); &#125; catch(InterruptedException e) &#123;&#125; System.out.println(who + "结束"); &#125; &#125;&#125;public class one &#123; public static void main(String[] args)&#123; MyThread you = new MyThread("你"); MyThread she = new MyThread("她"); you.start(); she.start(); System.out.println("结束"); &#125;&#125; 两个线程同时激活，但是会先执行完主程序。应为线程的sleep()会抛出InterruptedExecption类型的异常，所以要将sleep()写在try-catch中。 利用Runnable 接口来创建线程123456789101112131415161718192021222324252627282930313233343536class MyThead implements Runnable&#123; private String who; public MyThead(String str)&#123; who = str; &#125; public void run()&#123; for(int i = 0 ;i&lt;5;i++)&#123; try &#123; Thread.sleep((int)(1000*Math.random())); &#125; catch(InterruptedException e)&#123; System.out.println(e.toString()); &#125; System.out.println(who+"正在运行"); &#125; &#125;&#125;public class RunnableThread &#123; public static void main(String[] args)&#123; MyThead you = new MyThead("你"); MyThead she = new MyThead("她"); Thread t1 = new Thread(you); Thread t2 = new Thread(she); t1.start(); try&#123; t1.join(); &#125; catch(InterruptedException e)&#123;&#125; t2.start(); try&#123; t2.join(); &#125; catch(InterruptedException e)&#123;&#125; System.out.println("主函数结束"); &#125;&#125; 使用join()函数，当线程调用join()方法是，则其他线程会等到该线程结束后才开始执行。这样调用会在线程调用结束后，才会调用主函数。 两种方法1.直接继承Thread类的特点是：编写简单，可以直接操作线程；但缺点是若继承了Thread类，就不能在继承其他类。2.使用Runnable接口的特点是：可以将Thread类与所要处理的任务的类分开，形成清晰的模型；还可以从其他类继承，从而实现多重继承的功能。 线程间的数据共享使用Thread子类模拟1234567891011121314151617181920212223class ThreadSale extends Thread&#123; private int tickets = 10; public void run()&#123; while(true)&#123; if(tickets&gt;0)&#123; System.out.println(getName() + " 售货机"+ tickets-- +"号");; &#125; else&#123; System.exit(0); &#125; &#125; &#125;&#125;public class App_1 &#123; public static void mian(String[] args)&#123; ThreadSale t1 = new ThreadSale(); ThreadSale t2 = new ThreadSale(); ThreadSale t3 = new ThreadSale(); t1.start(); t2.start(); t3.start(); &#125;&#125; 上面结果，每个线程都会运行10次。每个不同的线程都有自己的方法和变量，每个线程可以得到自己的时间片，因此每个线程会独立的处理。 使用Runna接口1234567891011121314151617181920212223242526class ThreadSale1 implements Runnable &#123; private int tickets = 10; public void run()&#123; while(true)&#123; if(tickets&gt;0)&#123; System.out.println(Thread.currentThread().getName() + "售机票第" + tickets-- + "号"); &#125; else &#123; System.exit(0); &#125; &#125; &#125;&#125;public class App_2&#123; public static void main(String[] args)&#123; &lt;img src = "java-multi-thread/4.jpg"&gt;&lt;br&gt; ThreadSale1 t = new ThreadSale1(); Thread t1 = new Thread(t,"第1号售票机"); Thread t2 = new Thread(t,"第2号售票机"); Thread t3 = new Thread(t,"第3号售票机"); t1.start(); t2.start(); t3.start(); &#125;&#125; 虽然3个线程都可以独立地从CPU那里获得可以执行的时间片，但它们各自执行部分却是同一个对象t中的内容。 多线程的同步控制当一个线程执行时，不允许其他的线程进行操控，否则会破坏数据的完整性。12345678910111213141516171819202122232425262728class Mbank&#123; private static int sum = 2000; public static void take(int k)&#123; int temp = sum; temp -= k; try&#123; Thread.sleep((int)(1000*Math.random())); &#125; catch(InterruptedException e)&#123;&#125; sum = temp; System.out.println("sum="+sum); &#125;&#125;class Customer extends Thread&#123; public void run()&#123; for(int i=1;i&lt;=4;i++)&#123; Mbank.take(100); &#125; &#125;&#125;public class App_3 &#123; public static void main(String[] args)&#123; Customer c1 = new Customer(); Customer c2 = new Customer(); c1.start(); c2.start(); &#125;&#125; 本程序的本意是通过两个线程分别从一个共享变量中减去一定数值，以模拟两个用户从银行取款的操作。使用静态take()中的k表示每次的取款量，为了模拟网络阻塞，让系统睡眠随机时间段，再来显示最新存款。 synchronized方法为了保证互斥，使用synchronized关键字标识同步资源。1public synchronized static void take(int k) 线程之间的通信sleep()和wait()方法一样，都能使得线程阻塞，但是wait()方法在放弃CPU资源的同时交出资源的控制权，而sleep()方法则无法做到这一点。notify() 唤醒正在等待该对象互斥锁的第一个线程notiftAll()唤醒全部互斥锁的所以线程，具有最高优先级的线程首先被唤醒 模拟存票，售票1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465package threadtwo;public class App_4 &#123; public static void main(String[] args)&#123; Tickets t = new Tickets(10); new Producer(t).start(); new Consumer(t).start(); &#125;&#125;class Tickets&#123; protected int size; int number = 0; boolean available = false; public Tickets(int size)&#123; this.size = size; &#125; public synchronized void put()&#123; if(available)&#123; try&#123; wait(); &#125; catch(Exception e) &#123;&#125; &#125; System.out.println("存入第【"+(++number)+"】号票"); available = true; notify(); //存票后唤醒 &#125; public synchronized void sell()&#123; if(!available)&#123; try&#123; wait(); &#125; catch(Exception e) &#123;&#125; &#125; System.out.println("售入第【"+(number)+"】号票"); available = false; notify(); if(number == size)&#123; number = size + 1; &#125; //number &gt; size 表示售票结束 &#125;&#125;class Producer extends Thread&#123; Tickets t =null; public Producer (Tickets t)&#123; this.t = t; &#125; public void run()&#123; while(t.number &lt; t.size)&#123; t.put(); &#125; &#125;&#125;class Consumer extends Thread&#123; Tickets t =null; public Consumer(Tickets t)&#123; this.t =t; &#125; public void run()&#123; while(t.number &lt;= t.size)&#123; t.sell(); &#125; &#125;&#125;]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tried]]></title>
    <url>%2F2018%2F05%2F21%2F%E6%9C%80%E8%BF%91%2F</url>
    <content type="text"><![CDATA[today ??????4k??? ?????? JavaScript ?? ?? ????ppt 6.18]]></content>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用H5写手机app]]></title>
    <url>%2F2018%2F05%2F07%2Fapp-1%2F</url>
    <content type="text"></content>
      <tags>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery Mobile创建的第一个网页]]></title>
    <url>%2F2018%2F04%2F29%2FjQuery%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;jQuery Mobile创建的第一个网页&lt;/title&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;&lt;!--引用jQuery Mobile函数库 应用ThemeRoller制作的样式--&gt;&lt;link rel="stylesheet" href="themes/mytheme.min.css" /&gt;&lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.1.1/jquery.mobile.structure-1.1.1.min.css" /&gt;&lt;script src="http://code.jquery.com/jquery-1.7.1.min.js"&gt;&lt;/script&gt;&lt;script src="http://code.jquery.com/mobile/1.1.1/jquery.mobile-1.1.1.min.js"&gt;&lt;/script&gt;&lt;!--优化屏幕宽度--&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;&lt;style type="text/css"&gt;#content&#123;text-align:center;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div data-role="page" data-title="课程" id="first" data-theme="a"&gt; &lt;div data-role="header"&gt; &lt;h1&gt;课程&lt;/h1&gt; &lt;/div&gt; &lt;div data-role="content" id="content"&gt; &lt;ul data-role="listview" data-inset="true"&gt; &lt;li&gt; &lt;a href="chinese.htm"&gt; &lt;img src="images/chinese.jpg" /&gt; &lt;h3&gt;语文&lt;/h3&gt; &lt;p&gt;时间：星期一 人数：15人&lt;/p&gt; &lt;span class="ui-li-count"&gt;12&lt;/span&gt; &lt;/a&gt; &lt;a href="#taking" data-icon="gear"&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="math.htm"&gt; &lt;img src="images/math.jpg" /&gt; &lt;h3&gt;数学&lt;/h3&gt; &lt;p&gt;时间：星期三 人数：20人&lt;/p&gt; &lt;span class="ui-li-count"&gt;18&lt;/span&gt; &lt;/a&gt; &lt;a href="#taking" data-icon="gear"&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="english.htm"&gt; &lt;img src="images/english.jpg" /&gt; &lt;h3&gt;英语&lt;/h3&gt; &lt;p&gt;时间：星期五 人数：30人&lt;/p&gt; &lt;span class="ui-li-count"&gt;20&lt;/span&gt; &lt;/a&gt; &lt;a href="#taking" data-icon="gear"&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div data-role="footer"&gt; &lt;h4&gt;页脚&lt;/h4&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[a beautiful day]]></title>
    <url>%2F2018%2F04%2F19%2Fa-beautiful-day%2F</url>
    <content type="text"><![CDATA[Remembering me, discover and see All over the world, she’s known as a girl To those who are free, the mind shall be key Forgotten as the past, ‘cause history will last God is a girl, wherever you are Do you believe it, can you receive it? God is a girl, whatever you say Do you believe it, can you receive it? God is a girl, however you live Do you believe it, can you receive it? God is a girl, she’s only a girl Do you believe it, can you receive it? She wants to shine, forever in time She is so driven, she’s always mine Clearly and free, she wants you to be A part of the future, a girl like me There is a sky, illuminating us Someone is out there, that we truly trust There is a rainbow, for you and me A beautiful sunrise, eternally God is a girl, wherever you are Do you believe it, can you receive it? God is a girl, whatever you say Do you believe it, can you receive it? God is a girl, however you live Do you believe it, can you receive it? God is a girl, she’s only a girl Do you believe it, can you receive it?]]></content>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用jQuery开发手机app]]></title>
    <url>%2F2018%2F04%2F17%2F%E4%BD%BF%E7%94%A8jQuery%E5%BC%80%E5%8F%91%E6%89%8B%E6%9C%BAapp%2F</url>
    <content type="text"><![CDATA[开发工具使用电脑经行手机网页的开发，使用语言HTML5和CSS3和JavaScript。使用工具有Dreamweaver和Opera Mobile(不必须)，以及jQuery的库。1234&lt;title&gt;无标题文档&lt;/title&gt;&lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css"&gt;&lt;script src="http://code.jquery.com/jquery-1.8.3.min.js"&gt;&lt;/script&gt;&lt;script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"&gt;&lt;/script&gt; 这是在线使用jQuery的库，也可以下载到本地，调用本地文件。使用了jQuery的库之后，会引入几个新的参数。 基础语法jQuery语法是使用HTML元素的选取编制的，可以对元素执行某些操作。基础语法 $(selector).action() 美元符号定义jQuery 选择符(selector)”查询“和”查找”HTML元素 jQuery的action()执行元素的操作 jQuery Date 属性Button带有data-role = “button”的超链接。提示：如果需要多个按钮没使用data-role = “controlgroup” 以及 data-type = “horizontal | vertical “ 来规定水平还是垂直组合按钮。 Checkboxlabel和type=”checkbox” 的input是成对的。会被自动设置为按钮的样式，无需data-role。 Collapsible标题元素，其后是位于带有 data-role=”collapsible” 属性的容器中的任意 HTML 标记。 Collapsible Set带有 data-role=”collapsible-set” 属性的容器中的可折叠内容块。 Contentdata-theme letter(a-z) 规定内容的主题颜色。默认是”c”。 Footer带有 data-role = “footer” 属性的容器。注释：如需启用 fullscreen 定位，请使用 data-position=”fixed”，然后为该元素添加 data-fullscreen 属性。 headerdata-role=”header” 的容器。 lick所有链接，包括 data-role=”button” 的链接以及表单提交按钮。 list带有 data-role=”listview” 属性的 ol 或 ul。 Page带有 data-role=”page” 属性的容器。 select所有 &lt;select&gt;元素。会被自动设置按钮的样式，无需 date-role。提示：如需组合多个 select 元素，请使用 data-role=”controlgroup” 以及 data-type=”horizontal|vertical” 来规定把该元素水平还是垂直地进行组合。]]></content>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[超链接提示信息]]></title>
    <url>%2F2018%2F04%2F13%2Fcss-javascript-2%2F</url>
    <content type="text"><![CDATA[超链接提示信息 123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;script&gt;var a = document.getElementsByTagName("a")[0];var tit = a.getAttribute("title");a.removeAttribute("title");var div = document.createElement("div");var txt = document.createTextNode(tit);div.style.position = "absolute";div.setAttribute("class","title");div.setAttribute("className","title");div.appendChild(txt)a.onmouseover = function()&#123; a.appendChild(div);&#125;a.onmouseout = function()&#123; a.removeChild(div);&#125;&lt;/script&gt;&lt;style type="text/css"&gt;.title&#123; padding:4px 8px; border:solid 2px red; background:blue; color:#fff; text-decoration:none;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;a href="#" title="提示信息" target="_blank"&gt;超文本连接&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>css-javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[折叠窗口]]></title>
    <url>%2F2018%2F04%2F13%2Fcss-javascript-1%2F</url>
    <content type="text"><![CDATA[折叠窗口12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;style type="text/css"&gt;dl&#123; width:400px; border:solid 1px #ccc; font-size:12px;&#125;dt&#123; background:#7FECAD url(image/3.jpg) repeat-x; color:#71790C; height:28px; line-height:28px; padding-left:1em; border-bottom:solid 1px #efefef; cursor:pointer;&#125;dd&#123; padding:2px 4px; margin:0;&#125;.expend&#123;overflow:visible;&#125;.collapse&#123; height:28px; overflow:hidden;&#125;&lt;/style&gt;&lt;script&gt;function Switch(dt)&#123; var dl = dt.parentNode; if(dl.className == "collapse") dl.className ="expand"; else dl.className ="collapse";&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;dl&gt;true&lt;dt onclick="Switch(this)"&gt;标题&lt;/dt&gt;true&lt;dd&gt;折叠区域&lt;img src="image/1.jpg" width="300" /&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>css-javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tab页面]]></title>
    <url>%2F2018%2F04%2F06%2Fhtml-css-tap%2F</url>
    <content type="text"><![CDATA[利用javascript写的tab页面 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;style type="text/css"&gt;a &#123; color:#000000; text-decoration:none;&#125;a:hover&#123; color:#FFFFFF;&#125;ul&#123; list-style:none; /*清除默认项目结构*/ padding:0; margin:0px; text-align:center; /*文本居中*/&#125;/*tab---------------------------------------------------*/#tab&#123; width:920px; margin:0 auto; font-szie:12px; overflow:hidden; /*隐藏超出区域的部分*/&#125;/*菜单--------------------------------------------------*/.Menubox &#123; width:100%; background: #FFF; height:28px; line-height:28px;&#125;.Menubox ul&#123;margin:0px; padding:0px;&#125;.Menubox li&#123; float:left; display:block; cursor:pointer; /*定义手型指针*/ width:114px; text-align:center; color:949694; font-weight:bold; /*加粗字体*/&#125;.Menubox li img&#123;width:100%;&#125;.Menubox li.hover&#123; padding:0px; background:#ff; widows:116px; border:1px solid #A8C29F; border-bottom:none; background:#addddd; height:27px; line-height:27px;&#125;&gt;Contentbox&#123; clear:both; /*清除左右浮动元素*/ margin-top;0px; border:1px solid #A8C29F; border-top:none; padding-top:8px;&#125;.hide&#123;display:none&#125;&lt;/style&gt;&lt;script&gt;function setTab(cursel,n)&#123; for(i=1;i&lt;=n;i++)&#123; var menu=document.getElementById("tab_"+i); var con= document.getElementById("con_"+i); menu.className=i==cursel?"hover":""; con.style.display=i==cursel?"block":"none"; &#125; &#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="tab"&gt;true&lt;div class="Menubox"&gt;truetrue&lt;ul&gt;truetruetrue&lt;li id="tab_1" class="hover" onclick="setTab(1,4)"&gt;one&lt;/li&gt;truetruetrue&lt;li id="tab_2" onclick="setTab(2,4)"&gt;two&lt;/li&gt;truetruetrue&lt;li id="tab_3" onclick="setTab(3,4)"&gt;three&lt;/li&gt;truetruetrue&lt;li id="tab_4" onclick="setTab(4,4)"&gt;four&lt;/li&gt;truetrue&lt;/ul&gt;true&lt;/div&gt;true&lt;div class="Contentbox"&gt;truetrue&lt;div id="con_1" class="hover"&gt;&lt;img src="image/1.jpg" /&gt;&lt;/div&gt;truetrue&lt;div id="con_2" class="hide"&gt;&lt;img src="image/2.jpg" /&gt;&lt;/div&gt;truetrue&lt;div id="con_3" class="hide"&gt;&lt;img src="image/3.jpg" /&gt;&lt;/div&gt;truetrue&lt;div id="con_4" class="hide"&gt;&lt;img src="image/4.jpg" /&gt;&lt;/div&gt;true&lt;/div&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>html-css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列表]]></title>
    <url>%2F2018%2F04%2F06%2F%E5%88%97%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[列表的布局列表的堆叠12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;style type="text/css"&gt;#menu&#123; list-style-type:none; widows:18px; padding:0; /*清除补白*/ margin:0; /*清除边界*/&#125;#menu li&#123; list-style-type:none; /*清除项目符号*/ width:200px; /*定义列表项目的宽度*/ margin:3px 0; /*增加列表项目的上下边界*/&#125;#menu li a&#123; width:100%;&#125;#menu a,#menu a:visited&#123; display:block; /*块状显示*/ border:22px solid:#888; /*边框线*/ background-color: #ccc; color:#000; /*字体颜色*/ padding:8px 12px; /*增加补白*/ text-decoration:none; /*清除超链接下划线*/&#125;#menu a:hover&#123; color:#fff; background-color:#65707b; border:1px solid:#000;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;ul id="menu"&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 横向列表12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;style type="text/css"&gt;#menu&#123; padding:6px 0; /*清除补白*/ margin:0; /*清除边界*/ width:800px; background-color:#FFF2BF;&#125;#menu li&#123; list-style-type:none; /*清除项目符号*/ display:inline; /*行内显示*/&#125;#menu li a&#123; padding:3px 0.5em; /*顶部补白，间接定义文本垂直居中*/ text-decoration:none; color:blank; background-color:#CCFF33; border:2px solid:#FFF2BF;&#125;#menu a:visited&#123; display:block; /*块状显示*/ border:22px solid:#888; /*边框线*/ background-color: #ccc; color:#000; /*字体颜色*/ padding:8px 12px; /*增加补白*/ text-decoration:none; /*清除超链接下划线*/&#125;#menu a:hover&#123; color:#fff; background-color:#65707b; border:1px solid:#000;&#125;#menu a:active&#123; border-style:inset; /*定义立体边框样式*/&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;ul id="menu"&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" title=""&gt;列表1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[设计图文]]></title>
    <url>%2F2018%2F04%2F06%2F%E8%AE%BE%E8%AE%A1%E5%9B%BE%E6%96%87%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[example1]]></title>
    <url>%2F2018%2F04%2F03%2Fhtml-css-example1%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;style type="text/css"&gt;input[type="text"]&#123; background:url(image/1.jpg) no-repeat 2px 2px;&#125;input[type="password"]&#123; background:url(image/2.jpg) no-repeat 2px 2px;&#125;input[type="text"],input[type="password"]&#123; border:1px solid #0f0; width:160px; height:22px; padding:left:20px; margin:6px 0; line-height:20px;&#125;input[type="text"]:disabled&#123; background:#ddd url(image/3.jpg) no-repeat 2px 2px; border:1px solid #bbb;&#125;input[type="password"]:disbled&#123; background:#ddd url(image/4.jpg) no-repeat 2px 2px; border:1px solid #bbb;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;form action="#"&gt; &lt;label for="usename"&gt;用户名&lt;/label&gt; &lt;br /&gt;true&lt;input type="text" name="username" id="username"/&gt;true&lt;input type="text" name="usernamel" disabled="disabled" value="不可用" /&gt; &lt;br /&gt;true&lt;label for="password"&gt;密码&lt;/label&gt; &lt;br /&gt;true&lt;input type="password" name="password" id="password" /&gt;true&lt;input type="password" name="password" disabled="disabled" value="不可用" /&gt; &lt;br /&gt;true&lt;input type="submit" value="提交" /&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>html-css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[选择器]]></title>
    <url>%2F2018%2F04%2F03%2Fhtml-css-2%2F</url>
    <content type="text"><![CDATA[基本用法1. 直接放在标签的style属性中12&lt;span style="color:red:"&gt;&lt;/span&gt;&lt;div style="border:sold 1px blue;width:200px;height:200px;"&gt;&lt;/div&gt; 2. 把样式代码放在style标签内123&lt;style type="text/css"&gt;/*端落文本属性*/&lt;/style&gt; 3. 放到单独的文件中，使用标签或者@import导入123456&lt;link href="test.css" rel="stylesheet" type="text/css"&gt;type : 定义导入文件类型，同style元素一样 。&lt;style type="text/css"&gt;@import url("001.css");&lt;/style&gt; 简单选择器类选择器1234.font18px&#123; font-size:18px;&#125;p.font18px&#123; font-size:18px;&#125;&lt;div class="font18px"&gt;&lt;/div&gt;&lt;p class="font18px"&gt;&lt;/p&gt; 上列中p和div中的class是不同的，这是标签加类选择器的应用。 id选择器12#font18px&#123; font-size:18px;&#125;&lt;p id="font18px"&gt;&lt;/p&gt; 复合选择器子选择器123456789&lt;style type="text/css"&gt;span&#123;font-size:12px;&#125;div&gt;span&#123;font-size:16px;&#125;div&gt;.font24px&#123;font-size:20px;&#125;#box&gt;.font24px&#123;font-size:24px;&#125;&lt;/style&gt;&lt;div id="box"&gt;&lt;span class="font24px"&gt;The frist test&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="font24px"&gt; The scenod test&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; Finally &lt;/span&gt;&lt;/div&gt; 相邻选择器123456789101112&lt;style type="text/css"&gt;h2&#123;font-size:12px;&#125;h2+div&#123;font-size:16px;&#125;div+p&#123;font-size:20px;&#125;p+.class1&#123;font-size:24px;&#125;.class1+div&#123;font-size:28px;&#125;&lt;/style&gt;&lt;h2&gt;内容&lt;/h2&gt;&lt;div&gt;相邻选择器使用“+”标识相邻选择符&lt;/div&gt;&lt;p&gt;用来定义“+”后面相邻的元素样式&lt;/p&gt;&lt;div class="class1"&gt;可以使用class或者id属性进行控制&lt;/div&gt;&lt;div&gt;相邻选择器在IE6及其以下的版本也不被支持&lt;/div&gt; 包含选择器与多层选择器嵌套12345678910111213#wrap #header p&#123;font-size:14px&#125;#wrap #main h2 span&#123;font-size:18px&#125;&lt;div id="wrap"&gt; &lt;div id="header"&gt; &lt;div&gt; &lt;p&gt; information &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id="main"&gt; &lt;h2&gt;&lt;span&gt;这是可以的被定义的&lt;/span&gt;&lt;/h2&gt; &lt;span&gt;这里不会使用style&lt;/span&gt; &lt;/div&gt;&lt;/div&gt; 伪选择器和伪元素选择器123456&lt;style type="text/css"&gt;a:link&#123;color:#FF0000;&#125; /*正常状态下样式*/a:visited&#123;color:#00FF00;&#125; /*被访问之后的样式*/a:hover&#123;color:#0000FF;&#125; /*鼠标经过时的样式*/a:active&#123;color:#FF00FF;&#125; /*单击被激活是的样式*/&lt;/style&gt; 如果在“：”之前不加标签，在浏览器中浏览时所有的元素都会被定义为4种状态样式。 例子1234567891011121314151617181920212223&lt;style type="text/css"&gt;body &#123; background:url(image/1.jpg) no-repeat; height:100%; width:100%;&#125;#wrap &#123; position:absolute; width:249px; height:249px; z-index:1; left:712px; top:201px;&#125;#wrap ul &#123; list-style-type:none; margin:0; padding:0; font-szie:12px; color:#777;&#125;#wrap li &#123; background:url(image/2.jpg) no-repeat 2px 10px; padding: 1px 0px 0px 28px; line-height:30px;&#125;#wrap li a&#123; text-decoration:none; color:#777;&#125;#wrap li a:hover&#123;color:#F63;&#125;&lt;/style&gt;&lt;body&gt;&lt;div id="wrap"&gt; &lt;ul id="container"&gt;true &lt;li&gt;&lt;a herf="http://live.bilibili.com/32269"&gt;one&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;two&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;three&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;four&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;five&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;six&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;seven&lt;/a&gt;&lt;/li&gt;true &lt;li&gt;&lt;a herf="#"&gt;eight&lt;/a&gt;&lt;/li&gt;true &lt;/ul&gt;&lt;/div&gt;&lt;/body&gt;]]></content>
      <tags>
        <tag>html-css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html和css]]></title>
    <url>%2F2018%2F04%2F02%2Fhtml%E5%92%8Ccss%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;style type="text/css"&gt;body&#123; font-size:12px; color:#CCCCCC;&#125;&lt;/style&gt;&lt;link href="test.css" rel="stylesheet" type="text/css" /&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;something for nothin&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; test.css中的内容 :123456/* CSS Document */body&#123; font-size:12px; color:#CCCCCC;&#125; p&#123;background-color:#FF00FF&#125;]]></content>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[样例3]]></title>
    <url>%2F2018%2F04%2F02%2FTheHtml-3%2F</url>
    <content type="text"><![CDATA[html 中标签的使用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="page"&gt; &lt;aside id="sidebar"&gt; &lt;nav&gt; &lt;ul&gt; &lt;li class="active" id="nav-1"&gt;&lt;a href="#home"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li id="nav-2"&gt;&lt;a href="#work"&gt;Work&lt;/a&gt;&lt;/li&gt; &lt;li id="nav-3"&gt;&lt;a href="#about"&gt;About&lt;/a&gt;&lt;/li&gt; &lt;li id="nav-4"&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/nav&gt; &lt;/asdie&gt; &lt;div id="main-contenct"&gt; &lt;section id="top"&gt;there is something&lt;/section&gt; &lt;section id="home"&gt; &lt;div id="loader" class="loader"&gt;&lt;/div&gt; &lt;div id="ps_container" class="ps_container"&gt;&lt;/div&gt; &lt;header class="diver intro-text"&gt; &lt;h2&gt;I Love Asnier&lt;/h2&gt; &lt;/header&gt; &lt;div class="recent-work columns"&gt; &lt;h3&gt;My work is playing&lt;/h3&gt; &lt;div class="two-column"&gt; &lt;figure&gt;something for nothing 50%&lt;/figure&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;section id="work" class="clearfix"&gt; &lt;header&gt; &lt;h2&gt;My work&lt;/h2&gt; &lt;/header&gt; &lt;ul class="poject list"&gt;&lt;/ul&gt; &lt;/section&gt; &lt;section id="about" class="clearfix"&gt; &lt;header&gt; &lt;h2&gt;Who is the guy&lt;/h2&gt; &lt;/header&gt; &lt;figure class="marginRight"&gt;&lt;img src="image/1.jpg" alt="Image"&gt;&lt;/figure&gt; &lt;h3&gt;somting for nothing 100%&lt;/h3&gt; &lt;ul class="skills"&gt;&lt;/ul&gt; &lt;/section&gt; &lt;section id="contact" class="clearfix"&gt; &lt;header&gt; &lt;h2&gt;Get in touch&lt;/h2&gt; &lt;/header&gt; &lt;from actoin="#" method="post"&gt;&lt;/form&gt; &lt;div class="social_weapper"&gt; &lt;h3&gt;Where to find me?&lt;/h3&gt; &lt;ul class="social"&gt;&lt;/ul&gt; &lt;/div&gt; &lt;div class="copyright"&gt; &lt;p&gt;something for nothing&lt;/p&gt; &lt;/div&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 使用&lt;a herf=&quot;#&quot;&gt;的超链接，以及&lt;section id=&quot;#&quot;&gt;完成标签。 注意代码中的语法结构]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5与HTML4]]></title>
    <url>%2F2018%2F04%2F01%2FHTML5%E4%B8%AD%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[HTML5新增功能元素hgroup用于对整个页面或页面中一个内容区块的标题进行组合。在HTML4中使用 figure标识一段独立的流内容，一般表示文档主体流内容的一个独立单元。使用figcaption元素为figure添加标题 1234&lt;figure&gt; &lt;figcaption&gt;标题&lt;/figcaption&gt; &lt;p&gt;..&lt;/p&gt;&lt;/figure&gt; 在HTML4中使用123&lt;dl&gt; &lt;h1&gt; 标题 &lt;/h1&gt;&lt;/dl&gt; video定义视屏，如电影片段或其他视屏流1&lt;video src="movie.ogg" controls="controls"&gt;video&lt;/video&gt; audio定义音频，如音乐或其他音频流1&lt;audio src="someaudio.wav"&gt;..&lt;/audio&gt; embed用于插入各种多媒体，格式可以试Midi、Wav、AIFF、AU、MP3等1&lt;embed src="horse.wav"&gt; mark用来在视觉上向用户呈现那些休要凸显的或高亮显示的文字 canvas标识图形，如图表和其他图像。这个元素本身没有行为，仅提供一块画布，但他把一个绘图API展现给客户端JavaScript，以使脚本能够把想绘制的东西绘制到画布上。1&lt;canvas id="myCanvas" width="200" height="200"&gt;&lt;/canvas&gt; HTML5废除的元素使用css代替的元素对于basefont、big、center、font、s、strike、tt、u这些废除，使用编辑CSS、添加CSS样式表的方式进行替代。 不再使用frame框架HTML5不支持frame框架，只支持iframe框架，或使用服务器方创建的由多个页面组成的复合页面。]]></content>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[样例2]]></title>
    <url>%2F2018%2F04%2F01%2FTheHtml-2%2F</url>
    <content type="text"><![CDATA[HTML5语法DOCTYPE声明&lt;!DOCTYPE html SYSTEM””&gt; 不区分大小写，不区分单双引号 字符编码1&lt;meta charset="UTF-8"&gt; 版本兼容性HTML 中可以省略元素标记：1.可省略结束标记： li,dt,dd,p,rt,rp,opygroup,option,colgroup,thead,body,tfoot,tr,td,tf2.可省略全部标记的元素： html，head，body，colgroup，tbody123456&lt;!DOCTYPE html&gt;&lt;meta charest="UTF-8" /&gt;&lt;title&gt;HTML5基本语法&lt;/title&gt;&lt;h1&gt;menu&lt;/h1&gt;&lt;p&gt; 可省略&lt;br/&gt; Just Because HTML新增的结构元素12345678910111213141516171819202122232425262728293031323334353637&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charest="UTF-8"&gt;&lt;title&gt;HTML5结构元素&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt; &lt;h1&gt;网页标题&lt;/h1&gt; &lt;h2&gt;次级标题&lt;/h2&gt; &lt;h4&gt;提示信息&lt;/h4&gt;&lt;/header&gt;&lt;div id="container"&gt; &lt;nav&gt; &lt;h3&gt;导航&lt;/h3&gt; &lt;a href="#"&gt;链接 1&lt;/a&gt;&lt;a href="#"&gt;链接 2&lt;/a&gt;&lt;a href="https://languageone.github.io"&gt;我的博客&lt;/a&gt; &lt;section&gt; &lt;acticle&gt; &lt;header&gt; &lt;h1&gt;文章标题&lt;/h1&gt; &lt;/header&gt; &lt;p&gt;文章内容&lt;/p&gt; &lt;footer&gt; &lt;h2&gt;文章注脚&lt;/h2&gt; &lt;/footer&gt; &lt;/acticle&gt; &lt;/section&gt; &lt;aside&gt; &lt;h3&gt;相关内容&lt;/h3&gt; &lt;p&gt;information&lt;/p&gt; &lt;/aside&gt; &lt;footer&gt; &lt;h2&gt;页脚&lt;/h2&gt; &lt;/footer&gt; &lt;/div&gt;&lt;/body&gt; &lt;/html&gt; 导入css]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[样例1]]></title>
    <url>%2F2018%2F04%2F01%2FTheFristHtml%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;/head&gt;&lt;h1&gt;menu one&lt;/h1&gt;&lt;from action="action.asp"name="register"id="login"&gt; &lt;h2&gt;information(must)&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;name&lt;input id=""maxlength="12"size="30"name="usrname" /&gt; &lt;span&gt;The length of name is from 3 to 12byte&lt;/span&gt;&lt;/li&gt; &lt;li&gt;password&lt;input type="password"maxlength="16"size="30" value=""name="psw"/&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Reference material &lt;/h2&gt; &lt;ul&gt; &lt;li&gt;self web&lt;input maxlength="80" size="44" name="homepage"/&gt;&lt;/li&gt; &lt;li&gt;qq num&lt;input maxlength="20" size="44" name="OICQ"/&gt; &lt;span&gt;Please write your QQ&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;input name="" type="submit" value="submit" /&gt;&lt;/p&gt;&lt;/from&gt; &lt;h1&gt;menu two&lt;/h1&gt;&lt;from action="action.asp"name="register"id="login"&gt; &lt;fieldset&gt; &lt;legend&gt;information(must)&lt;/legend&gt; &lt;ul&gt; &lt;li&gt;name&lt;input id=""maxlength="12"size="30"name="usrname" /&gt; &lt;span&gt;The length of name is from 3 to 12byte&lt;/span&gt;&lt;/li&gt; &lt;li&gt;password&lt;input type="password"maxlength="16"size="30" value=""name="psw"/&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/fieldset&gt; &lt;fieldset&gt; &lt;lengend&gt;Reference material &lt;/lengend&gt; &lt;ul&gt; &lt;li&gt;self web&lt;input maxlength="80" size="44" name="homepage"/&gt;&lt;/li&gt; &lt;li&gt;qq num&lt;input maxlength="20" size="44" name="OICQ"/&gt; &lt;span&gt;Please write your QQ&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/fieldset&gt; &lt;p&gt;&lt;input name="" type="submit" value="submit" /&gt;&lt;/p&gt;&lt;/from&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript]]></title>
    <url>%2F2018%2F03%2F31%2FJavaScript%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[认知盒]]></title>
    <url>%2F2018%2F03%2F31%2Fcss%2F</url>
    <content type="text"><![CDATA[认知盒边界盒子摆放时不能全部堆在一起，要保留一定的空隙保存通风，方便取出。 边框盒子本身 填充害怕盒子里的东西损害而添加的抗震物质 内容盒子了的内容，文字、图片等]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据挖掘(伪)]]></title>
    <url>%2F2018%2F03%2F24%2F%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-%E4%BC%AA%2F</url>
    <content type="text"><![CDATA[最近在学习做数据挖掘(划掉)，统计学。 利用平日里同学们上机的数据，简单的分析每次考试题目的难易程度。图片，是简单处理的数据库，去除了内部数据滴。简单说一下：1.fristac ：每道题目首次提交的正确率。1 = 首次作对的人数 / 本次考试的总人数 2.sumac ： 每道题目得分率的数据，其中满分加1，在100到0之间加0.5。2 = 满分的提交次数 + 0.5 * 得分的提交次数 / 本题目的全部提交次数 3.completelyac ：每道题目得到满分的概率。3 = 全部得满分的提交数 / 本题目全部的提交次数 4.ac : 前三项数据进行加权为1的运算，得出题目的难易 程度。5.重复提交率 6. 那么，我们可以得到什么呐？虽然，得到了这些数据，可是我们应该怎么分析那？我们来看一看，他们之间的联系吧 ： 最开始的1和2之间，大多数1，2不会有明显的差距，可是在图中有个别1比2底了几个百分点。这样的数据是怎么造成的呐？ 在考试过程中是不会给出你是否是正确的。]]></content>
  </entry>
  <entry>
    <title><![CDATA[樱花]]></title>
    <url>%2F2018%2F03%2F23%2F%E6%A8%B1%E8%8A%B1%2F</url>
    <content type="text"><![CDATA[南京的樱花开了 每年的3月份，南京的鸡鸣诗都会出现人山人海的场景。樱花会迎着春天的脚步来到美丽的人世间。]]></content>
  </entry>
  <entry>
    <title><![CDATA[time]]></title>
    <url>%2F2018%2F03%2F20%2Ftime%2F</url>
    <content type="text"><![CDATA[like a knife]]></content>
      <tags>
        <tag>beautiful</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[风间]]></title>
    <url>%2F2018%2F03%2F10%2Fhello%20world%2F</url>
    <content type="text"><![CDATA[东方 - 风间幽香]]></content>
  </entry>
  <entry>
    <title><![CDATA[图像1]]></title>
    <url>%2F2018%2F03%2F05%2F%E5%9B%BE%E5%83%8F1%2F</url>
    <content type="text"><![CDATA[图像处理技术 – 1 1.分辨率 dpi:最大分辨率（插值）一英寸点数 lpi:线分辨率 人眼的观察是200dpi字典设置在170 - 180 dpi]]></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2F2018%2F03%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[简单的测试]]></title>
    <url>%2F2018%2F03%2F03%2F%E7%AE%80%E5%8D%95%E7%9A%84%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[1 标题的输入标题很简单，前面以 # 开头，有几个 #，就表示是几级标题，注意符号 和 文字之间的间隔example： 2 列表 无序列表，在文字之间添加-，+或者*符号，注意符号与文字之间的空格 有序列表，以数字开头，数字后面接一个点号【.】,注意与文字之间的间隔 example： 3 分割线分割线很简单，*** 或者 — 都表示分割线example: 4 链接链接很简单，[要显示的文字] + (链接) example：BaiDu 5 图片图片很简单，！ + [mou icon] + (图片链接)example：]]></content>
  </entry>
</search>
